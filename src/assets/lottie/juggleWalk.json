{"v":"5.7.6","fr":60,"ip":0,"op":60,"w":800,"h":600,"nm":"Ball Walk","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"NULL CONTROL ","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[407.5,324,0],"to":[0,0,0],"ti":[0,0,0]},{"t":60,"s":[4.5,324,0]}],"ix":2,"l":2},"a":{"a":0,"k":[50,50,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":62,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[90]},{"t":60,"s":[360]}],"ix":10},"p":{"a":0,"k":[-84.236,2.5,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar points = [\n    [\n        -249.5,\n        149.5\n    ],\n    [\n        -249.17,\n        153.56\n    ],\n    [\n        -248.23,\n        157.4\n    ],\n    [\n        -246.71,\n        160.99\n    ],\n    [\n        -244.68,\n        164.26\n    ],\n    [\n        -242.18,\n        167.18\n    ],\n    [\n        -239.26,\n        169.68\n    ],\n    [\n        -235.99,\n        171.71\n    ],\n    [\n        -232.4,\n        173.23\n    ],\n    [\n        -228.56,\n        174.17\n    ],\n    [\n        -224.5,\n        174.5\n    ],\n    [\n        -220.44,\n        174.17\n    ],\n    [\n        -216.6,\n        173.23\n    ],\n    [\n        -213.01,\n        171.71\n    ],\n    [\n        -209.74,\n        169.68\n    ],\n    [\n        -206.82,\n        167.18\n    ],\n    [\n        -204.32,\n        164.26\n    ],\n    [\n        -202.29,\n        160.99\n    ],\n    [\n        -200.77,\n        157.4\n    ],\n    [\n        -199.83,\n        153.56\n    ],\n    [\n        -199.5,\n        149.5\n    ],\n    [\n        -199.5,\n        -40.5\n    ],\n    [\n        -199.83,\n        -44.56\n    ],\n    [\n        -200.77,\n        -48.4\n    ],\n    [\n        -202.29,\n        -51.99\n    ],\n    [\n        -204.32,\n        -55.26\n    ],\n    [\n        -206.82,\n        -58.18\n    ],\n    [\n        -209.74,\n        -60.68\n    ],\n    [\n        -213.01,\n        -62.71\n    ],\n    [\n        -216.6,\n        -64.23\n    ],\n    [\n        -220.44,\n        -65.17\n    ],\n    [\n        -224.5,\n        -65.5\n    ],\n    [\n        -228.56,\n        -65.17\n    ],\n    [\n        -232.4,\n        -64.23\n    ],\n    [\n        -235.99,\n        -62.71\n    ],\n    [\n        -239.26,\n        -60.68\n    ],\n    [\n        -242.18,\n        -58.18\n    ],\n    [\n        -244.68,\n        -55.26\n    ],\n    [\n        -246.71,\n        -51.99\n    ],\n    [\n        -248.23,\n        -48.4\n    ],\n    [\n        -249.17,\n        -44.56\n    ],\n    [\n        -249.5,\n        -40.5\n    ]\n];\nvar ArrayEx = function () {\n    var a = {};\n    a.cycle = function (h, g) {\n        var f, d;\n        if (g === 0) {\n            return h;\n        }\n        f = [];\n        d = 0;\n        for (var e = g, b = h.length; e < b; e++) {\n            f[d] = h[e];\n            d++;\n        }\n        for (var c = 0; c < g; c++) {\n            f[d] = h[c];\n            d++;\n        }\n        return f;\n    };\n    a.getIndexOfMax = function (h, g) {\n        var f, e, d;\n        f = 0;\n        e = h[f][g];\n        for (var c = 1, b = h.length; c < b; c++) {\n            d = h[c][g];\n            if (e < d) {\n                e = d;\n                f = c;\n            }\n        }\n        return f;\n    };\n    a.getLast = function (b) {\n        return b[$bm_sub(b.length, 1)];\n    };\n    a.multiply = function (d, c) {\n        var b = [\n            d[0] * c[0],\n            d[1] * c[1]\n        ];\n        return b;\n    };\n    a.progressiveSum = function (f) {\n        var c, e;\n        c = 0;\n        e = [];\n        for (var d = 0, b = f.length; d < b; d++) {\n            c = $bm_sum(c, f[d]);\n            e[d] = c;\n        }\n        return e;\n    };\n    a.subtract = function (d, c) {\n        var b = [\n            d[0] - c[0],\n            d[1] - c[1]\n        ];\n        return b;\n    };\n    return a;\n}();\nvar Trig = function () {\n    var c = {};\n    c.getAngles = function (j) {\n        var n, m, l, k;\n        m = [];\n        for (var h = 0, g = j.length; h < g; h++) {\n            l = j[h];\n            k = j[$bm_mod($bm_sum(h, 1), g)];\n            n = b(l, k);\n            m[h] = n;\n        }\n        if (m[m.length - 1] === 0) {\n            m[m.length - 1] = 360;\n        }\n        return m;\n    };\n    c.getDistancesBetweenPoints = function (k) {\n        var n, h, m, l;\n        h = [];\n        for (var j = 0, g = k.length; j < g; j++) {\n            m = k[j];\n            l = k[$bm_mod($bm_sum(j, 1), g)];\n            n = e(m, l);\n            h[j] = n;\n        }\n        return h;\n    };\n    c.rotate = function (m, n, h) {\n        var o, i, j, g, l, k;\n        o = Math.cos;\n        j = Math.sin;\n        g = $bm_div($bm_mul(h, Math.PI), 180);\n        i = ArrayEx.subtract(n, m);\n        l = $bm_sum($bm_sub($bm_mul(i[0], o(g)), $bm_mul(i[1], j(g))), m[0]);\n        k = $bm_sum($bm_sum($bm_mul(i[0], j(g)), $bm_mul(i[1], o(g))), m[1]);\n        return [\n            a(l),\n            a(k)\n        ];\n    };\n    c.normaliseRotation = function (g) {\n        return d(g, 360);\n    };\n    return c;\n    function b(l, j) {\n        var k, h, g, i;\n        h = $bm_sub(l[0], j[0]);\n        g = $bm_sub(l[1], j[1]);\n        i = Math.atan2(g, h);\n        k = f(i);\n        k = a($bm_sub(180, k));\n        return k;\n    }\n    function e(j, i) {\n        var k, h, g;\n        h = $bm_sub(j[0], i[0]);\n        g = $bm_sub(j[1], i[1]);\n        k = Math.sqrt($bm_sum($bm_mul(h, h), $bm_mul(g, g)));\n        return k;\n    }\n    function d(h, g) {\n        return $bm_mod($bm_sum($bm_mod(h, g), g), g);\n    }\n    function a(j, h) {\n        var i, g;\n        if (typeof h === 'undefined') {\n            h = 2;\n        }\n        i = Math.pow(10, h);\n        g = $bm_div(Math.round($bm_mul(j, i)), i);\n        return g;\n    }\n    function f(g) {\n        return $bm_div($bm_mul(g, 180), Math.PI);\n    }\n}();\nvar roll = function () {\n    var j = transform.anchorPoint;\n    var l = transform.rotation;\n    var s = transform.scale.value;\n    var e = $bm_div(s, 100);\n    points = d(points, e);\n    j = ArrayEx.multiply(j, e);\n    var n = ArrayEx.getIndexOfMax(points, 1);\n    points = ArrayEx.cycle(points, n);\n    var g = points[0];\n    var f = Trig.getDistancesBetweenPoints(points);\n    var c = ArrayEx.progressiveSum(f);\n    c.unshift(0);\n    var i = ArrayEx.getLast(c);\n    var m = Trig.getAngles(points);\n    var r = Math.floor($bm_div(l, 360));\n    var p = Trig.normaliseRotation(l);\n    var o = b(p, m);\n    var a = Trig.rotate(j, points[o], l);\n    var q = c[o];\n    if (p > ArrayEx.getLast(m) && p < 360) {\n        q = i;\n    }\n    q = $bm_sum(q, $bm_mul(r, i));\n    var k = $bm_sum($bm_sum($bm_neg(a[0]), g[0]), q);\n    var h = $bm_sum($bm_neg(a[1]), g[1]);\n    return {\n        x: k,\n        y: h\n    };\n    function d(x, w) {\n        var t = [];\n        for (var v = 0, u = x.length; v < u; v++) {\n            t[v] = ArrayEx.multiply(x[v], w);\n        }\n        return t;\n    }\n    function b(x, w) {\n        var u;\n        u = 0;\n        for (var v = 0, t = w.length - 1; v < t; v++) {\n            if (x > w[v] && x <= w[v + 1]) {\n                u = $bm_sum(v, 1);\n                break;\n            }\n        }\n        return u;\n    }\n}();\nvar x = $bm_sum(transform.position[0], roll.x);\nvar y = $bm_sum(transform.position[1], roll.y);\nvar z = 0;\nif (transform.position.value.length > 2) {\n    z = transform.position[2];\n}\n$bm_rt = [\n    x,\n    y,\n    z\n];"},"a":{"a":0,"k":[-224.5,54.5,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-13.807,0],[0,-13.807],[13.807,0],[0,13.807]],"o":[[13.807,0],[0,13.807],[-13.807,0],[0,-13.807]],"v":[[-224.5,-65.5],[-199.5,-40.5],[-224.5,-15.5],[-249.5,-40.5]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-13.807,0],[0,-13.807],[13.807,0],[0,13.807]],"o":[[13.807,0],[0,13.807],[-13.807,0],[0,-13.807]],"v":[[-224.5,124.5],[-199.5,149.5],[-224.5,174.5],[-249.5,149.5]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.858823537827,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 2","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":62,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Shape Layer 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":60,"s":[270]}],"ix":10},"p":{"a":0,"k":[50,2.5,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar points = [\n    [\n        -249.5,\n        149.5\n    ],\n    [\n        -249.17,\n        153.56\n    ],\n    [\n        -248.23,\n        157.4\n    ],\n    [\n        -246.71,\n        160.99\n    ],\n    [\n        -244.68,\n        164.26\n    ],\n    [\n        -242.18,\n        167.18\n    ],\n    [\n        -239.26,\n        169.68\n    ],\n    [\n        -235.99,\n        171.71\n    ],\n    [\n        -232.4,\n        173.23\n    ],\n    [\n        -228.56,\n        174.17\n    ],\n    [\n        -224.5,\n        174.5\n    ],\n    [\n        -220.44,\n        174.17\n    ],\n    [\n        -216.6,\n        173.23\n    ],\n    [\n        -213.01,\n        171.71\n    ],\n    [\n        -209.74,\n        169.68\n    ],\n    [\n        -206.82,\n        167.18\n    ],\n    [\n        -204.32,\n        164.26\n    ],\n    [\n        -202.29,\n        160.99\n    ],\n    [\n        -200.77,\n        157.4\n    ],\n    [\n        -199.83,\n        153.56\n    ],\n    [\n        -199.5,\n        149.5\n    ],\n    [\n        -199.5,\n        -40.5\n    ],\n    [\n        -199.83,\n        -44.56\n    ],\n    [\n        -200.77,\n        -48.4\n    ],\n    [\n        -202.29,\n        -51.99\n    ],\n    [\n        -204.32,\n        -55.26\n    ],\n    [\n        -206.82,\n        -58.18\n    ],\n    [\n        -209.74,\n        -60.68\n    ],\n    [\n        -213.01,\n        -62.71\n    ],\n    [\n        -216.6,\n        -64.23\n    ],\n    [\n        -220.44,\n        -65.17\n    ],\n    [\n        -224.5,\n        -65.5\n    ],\n    [\n        -228.56,\n        -65.17\n    ],\n    [\n        -232.4,\n        -64.23\n    ],\n    [\n        -235.99,\n        -62.71\n    ],\n    [\n        -239.26,\n        -60.68\n    ],\n    [\n        -242.18,\n        -58.18\n    ],\n    [\n        -244.68,\n        -55.26\n    ],\n    [\n        -246.71,\n        -51.99\n    ],\n    [\n        -248.23,\n        -48.4\n    ],\n    [\n        -249.17,\n        -44.56\n    ],\n    [\n        -249.5,\n        -40.5\n    ]\n];\nvar ArrayEx = function () {\n    var a = {};\n    a.cycle = function (h, g) {\n        var f, d;\n        if (g === 0) {\n            return h;\n        }\n        f = [];\n        d = 0;\n        for (var e = g, b = h.length; e < b; e++) {\n            f[d] = h[e];\n            d++;\n        }\n        for (var c = 0; c < g; c++) {\n            f[d] = h[c];\n            d++;\n        }\n        return f;\n    };\n    a.getIndexOfMax = function (h, g) {\n        var f, e, d;\n        f = 0;\n        e = h[f][g];\n        for (var c = 1, b = h.length; c < b; c++) {\n            d = h[c][g];\n            if (e < d) {\n                e = d;\n                f = c;\n            }\n        }\n        return f;\n    };\n    a.getLast = function (b) {\n        return b[$bm_sub(b.length, 1)];\n    };\n    a.multiply = function (d, c) {\n        var b = [\n            d[0] * c[0],\n            d[1] * c[1]\n        ];\n        return b;\n    };\n    a.progressiveSum = function (f) {\n        var c, e;\n        c = 0;\n        e = [];\n        for (var d = 0, b = f.length; d < b; d++) {\n            c = $bm_sum(c, f[d]);\n            e[d] = c;\n        }\n        return e;\n    };\n    a.subtract = function (d, c) {\n        var b = [\n            d[0] - c[0],\n            d[1] - c[1]\n        ];\n        return b;\n    };\n    return a;\n}();\nvar Trig = function () {\n    var c = {};\n    c.getAngles = function (j) {\n        var n, m, l, k;\n        m = [];\n        for (var h = 0, g = j.length; h < g; h++) {\n            l = j[h];\n            k = j[$bm_mod($bm_sum(h, 1), g)];\n            n = b(l, k);\n            m[h] = n;\n        }\n        if (m[m.length - 1] === 0) {\n            m[m.length - 1] = 360;\n        }\n        return m;\n    };\n    c.getDistancesBetweenPoints = function (k) {\n        var n, h, m, l;\n        h = [];\n        for (var j = 0, g = k.length; j < g; j++) {\n            m = k[j];\n            l = k[$bm_mod($bm_sum(j, 1), g)];\n            n = e(m, l);\n            h[j] = n;\n        }\n        return h;\n    };\n    c.rotate = function (m, n, h) {\n        var o, i, j, g, l, k;\n        o = Math.cos;\n        j = Math.sin;\n        g = $bm_div($bm_mul(h, Math.PI), 180);\n        i = ArrayEx.subtract(n, m);\n        l = $bm_sum($bm_sub($bm_mul(i[0], o(g)), $bm_mul(i[1], j(g))), m[0]);\n        k = $bm_sum($bm_sum($bm_mul(i[0], j(g)), $bm_mul(i[1], o(g))), m[1]);\n        return [\n            a(l),\n            a(k)\n        ];\n    };\n    c.normaliseRotation = function (g) {\n        return d(g, 360);\n    };\n    return c;\n    function b(l, j) {\n        var k, h, g, i;\n        h = $bm_sub(l[0], j[0]);\n        g = $bm_sub(l[1], j[1]);\n        i = Math.atan2(g, h);\n        k = f(i);\n        k = a($bm_sub(180, k));\n        return k;\n    }\n    function e(j, i) {\n        var k, h, g;\n        h = $bm_sub(j[0], i[0]);\n        g = $bm_sub(j[1], i[1]);\n        k = Math.sqrt($bm_sum($bm_mul(h, h), $bm_mul(g, g)));\n        return k;\n    }\n    function d(h, g) {\n        return $bm_mod($bm_sum($bm_mod(h, g), g), g);\n    }\n    function a(j, h) {\n        var i, g;\n        if (typeof h === 'undefined') {\n            h = 2;\n        }\n        i = Math.pow(10, h);\n        g = $bm_div(Math.round($bm_mul(j, i)), i);\n        return g;\n    }\n    function f(g) {\n        return $bm_div($bm_mul(g, 180), Math.PI);\n    }\n}();\nvar roll = function () {\n    var j = transform.anchorPoint;\n    var l = transform.rotation;\n    var s = transform.scale.value;\n    var e = $bm_div(s, 100);\n    points = d(points, e);\n    j = ArrayEx.multiply(j, e);\n    var n = ArrayEx.getIndexOfMax(points, 1);\n    points = ArrayEx.cycle(points, n);\n    var g = points[0];\n    var f = Trig.getDistancesBetweenPoints(points);\n    var c = ArrayEx.progressiveSum(f);\n    c.unshift(0);\n    var i = ArrayEx.getLast(c);\n    var m = Trig.getAngles(points);\n    var r = Math.floor($bm_div(l, 360));\n    var p = Trig.normaliseRotation(l);\n    var o = b(p, m);\n    var a = Trig.rotate(j, points[o], l);\n    var q = c[o];\n    if (p > ArrayEx.getLast(m) && p < 360) {\n        q = i;\n    }\n    q = $bm_sum(q, $bm_mul(r, i));\n    var k = $bm_sum($bm_sum($bm_neg(a[0]), g[0]), q);\n    var h = $bm_sum($bm_neg(a[1]), g[1]);\n    return {\n        x: k,\n        y: h\n    };\n    function d(x, w) {\n        var t = [];\n        for (var v = 0, u = x.length; v < u; v++) {\n            t[v] = ArrayEx.multiply(x[v], w);\n        }\n        return t;\n    }\n    function b(x, w) {\n        var u;\n        u = 0;\n        for (var v = 0, t = w.length - 1; v < t; v++) {\n            if (x > w[v] && x <= w[v + 1]) {\n                u = $bm_sum(v, 1);\n                break;\n            }\n        }\n        return u;\n    }\n}();\nvar x = $bm_sum(transform.position[0], roll.x);\nvar y = $bm_sum(transform.position[1], roll.y);\nvar z = 0;\nif (transform.position.value.length > 2) {\n    z = transform.position[2];\n}\n$bm_rt = [\n    x,\n    y,\n    z\n];"},"a":{"a":0,"k":[-224.5,54.5,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-13.807,0],[0,-13.807],[13.807,0],[0,13.807]],"o":[[13.807,0],[0,13.807],[-13.807,0],[0,-13.807]],"v":[[-224.5,-65.5],[-199.5,-40.5],[-224.5,-15.5],[-249.5,-40.5]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-13.807,0],[0,-13.807],[13.807,0],[0,13.807]],"o":[[13.807,0],[0,13.807],[-13.807,0],[0,-13.807]],"v":[[-224.5,124.5],[-199.5,149.5],[-224.5,174.5],[-249.5,149.5]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.858823537827,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 2","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":62,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Comp 2","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":13,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[402,382.5,0],"ix":2,"l":2},"a":{"a":0,"k":[400,300,0],"ix":1,"l":2},"s":{"a":0,"k":[-100,100,100],"ix":6,"l":2}},"ao":0,"w":800,"h":600,"ip":0,"op":62,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"Comp 2","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[400,188,0],"ix":2,"l":2},"a":{"a":0,"k":[400,300,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":800,"h":600,"ip":0,"op":62,"st":0,"bm":0}],"markers":[]}